{
    "openapi": "3.0.0",
    "info": {
        "title": "Trackventory API",
        "description": "API documentation for Trackventory - Inventory Tracking System",
        "contact": {
            "name": "Trackventory Support",
            "email": "support@trackventory.com"
        },
        "version": "1.0.0"
    },
    "servers": [
        {
            "url": "http://localhost:8000",
            "description": "Local development server"
        }
    ],
    "paths": {
        "/api/borrow-statuses": {
            "get": {
                "tags": [
                    "Borrow Statuses"
                ],
                "summary": "Get all borrow statuses",
                "description": "Retrieve a list of all borrow statuses",
                "operationId": "c69e85f4e2e6f6a79c6912c5f0a4a16b",
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "Borrow statuses retrieved successfully"
                                        },
                                        "data": {
                                            "type": "array",
                                            "items": {
                                                "$ref": "#/components/schemas/BorrowStatus"
                                            }
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            },
            "post": {
                "tags": [
                    "Borrow Statuses"
                ],
                "summary": "Create a new borrow status",
                "description": "Create a new borrow status with status name and badge color",
                "operationId": "433ae6d252c1f8d97ed5965880c48fb0",
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "required": [
                                    "status_name",
                                    "badge_color"
                                ],
                                "properties": {
                                    "status_name": {
                                        "type": "string",
                                        "maxLength": 255,
                                        "example": "Borrowed"
                                    },
                                    "badge_color": {
                                        "type": "string",
                                        "maxLength": 7,
                                        "example": "#007BFF"
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "201": {
                        "description": "Borrow status created successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "Borrow status created successfully"
                                        },
                                        "data": {
                                            "$ref": "#/components/schemas/BorrowStatus"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "422": {
                        "description": "Validation error"
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            }
        },
        "/api/borrow-statuses/{id}": {
            "get": {
                "tags": [
                    "Borrow Statuses"
                ],
                "summary": "Get a specific borrow status",
                "description": "Retrieve a specific borrow status by ID",
                "operationId": "6e963b111a99deee2d77789c6a0a564d",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "Borrow status ID",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "Borrow status retrieved successfully"
                                        },
                                        "data": {
                                            "$ref": "#/components/schemas/BorrowStatus"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Borrow status not found"
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            },
            "put": {
                "tags": [
                    "Borrow Statuses"
                ],
                "summary": "Update a borrow status",
                "description": "Update an existing borrow status",
                "operationId": "acf1675a0f78b07d70b74de7c88858f5",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "Borrow status ID",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "properties": {
                                    "status_name": {
                                        "type": "string",
                                        "maxLength": 255,
                                        "example": "Returned"
                                    },
                                    "badge_color": {
                                        "type": "string",
                                        "maxLength": 7,
                                        "example": "#28A745"
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Borrow status updated successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "Borrow status updated successfully"
                                        },
                                        "data": {
                                            "$ref": "#/components/schemas/BorrowStatus"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Borrow status not found"
                    },
                    "422": {
                        "description": "Validation error"
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            },
            "delete": {
                "tags": [
                    "Borrow Statuses"
                ],
                "summary": "Delete a borrow status",
                "description": "Delete an existing borrow status",
                "operationId": "1827f5612fc2872833af29bbef2cc813",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "Borrow status ID",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "responses": {
                    "204": {
                        "description": "Borrow status deleted successfully"
                    },
                    "404": {
                        "description": "Borrow status not found"
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            }
        },
        "/api/categories": {
            "get": {
                "tags": [
                    "Categories"
                ],
                "summary": "Get all categories",
                "description": "Retrieve a list of all categories",
                "operationId": "ac9c4d978ea4e5b72915ca9728e5b8b1",
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "Categories retrieved successfully"
                                        },
                                        "data": {
                                            "type": "array",
                                            "items": {
                                                "$ref": "#/components/schemas/Category"
                                            }
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            },
            "post": {
                "tags": [
                    "Categories"
                ],
                "summary": "Create a new category",
                "description": "Create a new category with name and description",
                "operationId": "cca49a87d9b0ebb9a98ad7c154b71737",
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "required": [
                                    "category_name"
                                ],
                                "properties": {
                                    "category_name": {
                                        "type": "string",
                                        "maxLength": 255,
                                        "example": "Electronics"
                                    },
                                    "description": {
                                        "type": "string",
                                        "example": "Electronic devices and components"
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "201": {
                        "description": "Category created successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "Category created successfully"
                                        },
                                        "data": {
                                            "$ref": "#/components/schemas/Category"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "422": {
                        "description": "Validation error"
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            }
        },
        "/api/categories/{id}": {
            "get": {
                "tags": [
                    "Categories"
                ],
                "summary": "Get a specific category",
                "description": "Retrieve a specific category by ID",
                "operationId": "09767bb2e47dde77dd1e2591428b0ae1",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "Category ID",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "Category retrieved successfully"
                                        },
                                        "data": {
                                            "$ref": "#/components/schemas/Category"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Category not found"
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            },
            "put": {
                "tags": [
                    "Categories"
                ],
                "summary": "Update a category",
                "description": "Update an existing category",
                "operationId": "7dcf71887e585de7f881e9eb98d86126",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "Category ID",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "required": [
                                    "category_name"
                                ],
                                "properties": {
                                    "category_name": {
                                        "type": "string",
                                        "maxLength": 255,
                                        "example": "Office Supplies"
                                    },
                                    "description": {
                                        "type": "string",
                                        "example": "Office supplies and stationery"
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Category updated successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "Category updated successfully"
                                        },
                                        "data": {
                                            "$ref": "#/components/schemas/Category"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Category not found"
                    },
                    "422": {
                        "description": "Validation error"
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            },
            "delete": {
                "tags": [
                    "Categories"
                ],
                "summary": "Delete a category",
                "description": "Delete an existing category",
                "operationId": "9b61b65823f4a21f182506b34ddf805c",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "Category ID",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "responses": {
                    "204": {
                        "description": "Category deleted successfully"
                    },
                    "404": {
                        "description": "Category not found"
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            }
        },
        "/api/item-borroweds": {
            "get": {
                "tags": [
                    "Item Borrowed"
                ],
                "summary": "Get all borrowed items",
                "description": "Retrieve a list of all borrowed items with search, sort, and pagination",
                "operationId": "e57e3d6d2c9e61ef897a677e225b32ac",
                "parameters": [
                    {
                        "name": "search",
                        "in": "query",
                        "description": "Search term for borrow_date, return_date, or due_date",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "sort_by",
                        "in": "query",
                        "description": "Field to sort by",
                        "required": false,
                        "schema": {
                            "type": "string",
                            "enum": [
                                "id",
                                "borrow_date",
                                "return_date",
                                "due_date",
                                "quantity",
                                "fine",
                                "created_at"
                            ]
                        }
                    },
                    {
                        "name": "sort_order",
                        "in": "query",
                        "description": "Sort order",
                        "required": false,
                        "schema": {
                            "type": "string",
                            "default": "asc",
                            "enum": [
                                "asc",
                                "desc"
                            ]
                        }
                    },
                    {
                        "name": "per_page",
                        "in": "query",
                        "description": "Number of items per page",
                        "required": false,
                        "schema": {
                            "type": "integer",
                            "default": 15,
                            "maximum": 100,
                            "minimum": 1
                        }
                    },
                    {
                        "name": "page",
                        "in": "query",
                        "description": "Page number",
                        "required": false,
                        "schema": {
                            "type": "integer",
                            "default": 1,
                            "minimum": 1
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "Items borrowed retrieved successfully"
                                        },
                                        "data": {
                                            "type": "array",
                                            "items": {
                                                "$ref": "#/components/schemas/ItemBorrowed"
                                            }
                                        },
                                        "pagination": {
                                            "properties": {
                                                "current_page": {
                                                    "type": "integer"
                                                },
                                                "last_page": {
                                                    "type": "integer"
                                                },
                                                "per_page": {
                                                    "type": "integer"
                                                },
                                                "total": {
                                                    "type": "integer"
                                                },
                                                "from": {
                                                    "type": "integer"
                                                },
                                                "to": {
                                                    "type": "integer"
                                                }
                                            },
                                            "type": "object"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            },
            "post": {
                "tags": [
                    "Item Borrowed"
                ],
                "summary": "Create a new borrowed item record",
                "description": "Create a new record for borrowed item",
                "operationId": "3b6ff1c40f52e6fed695d65a5ae9ea35",
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "required": [
                                    "user_id",
                                    "item_id",
                                    "borrow_status_id",
                                    "quantity",
                                    "borrow_date",
                                    "due_date"
                                ],
                                "properties": {
                                    "user_id": {
                                        "type": "integer",
                                        "example": 1
                                    },
                                    "item_id": {
                                        "type": "integer",
                                        "example": 1
                                    },
                                    "borrow_status_id": {
                                        "type": "integer",
                                        "example": 3
                                    },
                                    "quantity": {
                                        "type": "integer",
                                        "minimum": 1,
                                        "example": 2
                                    },
                                    "borrow_date": {
                                        "type": "string",
                                        "format": "date",
                                        "example": "2024-01-15"
                                    },
                                    "return_date": {
                                        "type": "string",
                                        "format": "date",
                                        "example": null,
                                        "nullable": true
                                    },
                                    "due_date": {
                                        "type": "string",
                                        "format": "date",
                                        "example": "2024-01-22"
                                    },
                                    "fine": {
                                        "type": "number",
                                        "format": "float",
                                        "minimum": 0,
                                        "example": 0
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "201": {
                        "description": "Item borrowed created successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "Item borrowed created successfully"
                                        },
                                        "data": {
                                            "$ref": "#/components/schemas/ItemBorrowed"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "422": {
                        "description": "Validation error"
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            }
        },
        "/api/item-borroweds/{id}": {
            "get": {
                "tags": [
                    "Item Borrowed"
                ],
                "summary": "Get a specific borrowed item",
                "description": "Retrieve a specific borrowed item record by ID",
                "operationId": "d6c40ad74fa3dc710bf67e975fc84cc4",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "Item borrowed ID",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "Item borrowed retrieved successfully"
                                        },
                                        "data": {
                                            "$ref": "#/components/schemas/ItemBorrowed"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Item borrowed not found"
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            },
            "put": {
                "tags": [
                    "Item Borrowed"
                ],
                "summary": "Update a borrowed item record",
                "description": "Update an existing borrowed item record",
                "operationId": "9ed9c21a9a01a2b225ff700887f1d368",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "Item borrowed ID",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "properties": {
                                    "user_id": {
                                        "type": "integer",
                                        "example": 1
                                    },
                                    "item_id": {
                                        "type": "integer",
                                        "example": 1
                                    },
                                    "borrow_status_id": {
                                        "type": "integer",
                                        "example": 4
                                    },
                                    "quantity": {
                                        "type": "integer",
                                        "minimum": 1,
                                        "example": 2
                                    },
                                    "borrow_date": {
                                        "type": "string",
                                        "format": "date",
                                        "example": "2024-01-15"
                                    },
                                    "return_date": {
                                        "type": "string",
                                        "format": "date",
                                        "example": "2024-01-20",
                                        "nullable": true
                                    },
                                    "due_date": {
                                        "type": "string",
                                        "format": "date",
                                        "example": "2024-01-22"
                                    },
                                    "fine": {
                                        "type": "number",
                                        "format": "float",
                                        "minimum": 0,
                                        "example": 0
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Item borrowed updated successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "Item borrowed updated successfully"
                                        },
                                        "data": {
                                            "$ref": "#/components/schemas/ItemBorrowed"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Item borrowed not found"
                    },
                    "422": {
                        "description": "Validation error"
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            },
            "delete": {
                "tags": [
                    "Item Borrowed"
                ],
                "summary": "Delete a borrowed item record",
                "description": "Delete an existing borrowed item record",
                "operationId": "347f46e733d4bc828b3c372c6c710db8",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "Item borrowed ID",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "responses": {
                    "204": {
                        "description": "Item borrowed deleted successfully"
                    },
                    "404": {
                        "description": "Item borrowed not found"
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            }
        },
        "/api/items": {
            "get": {
                "tags": [
                    "Items"
                ],
                "summary": "Get all items",
                "description": "Retrieve a list of all inventory items with search, sort, and pagination",
                "operationId": "53e44209d7fe56acf154d9c0d47e5069",
                "parameters": [
                    {
                        "name": "search",
                        "in": "query",
                        "description": "Search term for item name, description, or brand",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "sort_by",
                        "in": "query",
                        "description": "Field to sort by",
                        "required": false,
                        "schema": {
                            "type": "string",
                            "enum": [
                                "id",
                                "item_name",
                                "stock",
                                "brand",
                                "created_at"
                            ]
                        }
                    },
                    {
                        "name": "sort_order",
                        "in": "query",
                        "description": "Sort order",
                        "required": false,
                        "schema": {
                            "type": "string",
                            "default": "asc",
                            "enum": [
                                "asc",
                                "desc"
                            ]
                        }
                    },
                    {
                        "name": "per_page",
                        "in": "query",
                        "description": "Number of items per page",
                        "required": false,
                        "schema": {
                            "type": "integer",
                            "default": 15,
                            "maximum": 100,
                            "minimum": 1
                        }
                    },
                    {
                        "name": "page",
                        "in": "query",
                        "description": "Page number",
                        "required": false,
                        "schema": {
                            "type": "integer",
                            "default": 1,
                            "minimum": 1
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "Items retrieved successfully"
                                        },
                                        "data": {
                                            "type": "array",
                                            "items": {
                                                "$ref": "#/components/schemas/Item"
                                            }
                                        },
                                        "pagination": {
                                            "properties": {
                                                "current_page": {
                                                    "type": "integer"
                                                },
                                                "last_page": {
                                                    "type": "integer"
                                                },
                                                "per_page": {
                                                    "type": "integer"
                                                },
                                                "total": {
                                                    "type": "integer"
                                                },
                                                "from": {
                                                    "type": "integer"
                                                },
                                                "to": {
                                                    "type": "integer"
                                                }
                                            },
                                            "type": "object"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            },
            "post": {
                "tags": [
                    "Items"
                ],
                "summary": "Create a new item",
                "description": "Create a new inventory item",
                "operationId": "371ad8f4244d53c482a14de9004905a4",
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "required": [
                                    "category_id",
                                    "item_name",
                                    "stock"
                                ],
                                "properties": {
                                    "category_id": {
                                        "type": "integer",
                                        "example": 1
                                    },
                                    "item_name": {
                                        "type": "string",
                                        "maxLength": 255,
                                        "example": "Laptop Dell Inspiron"
                                    },
                                    "stock": {
                                        "type": "integer",
                                        "minimum": 0,
                                        "example": 25
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "201": {
                        "description": "Item created successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "Item created successfully"
                                        },
                                        "data": {
                                            "$ref": "#/components/schemas/Item"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "422": {
                        "description": "Validation error"
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            }
        },
        "/api/items/{id}": {
            "get": {
                "tags": [
                    "Items"
                ],
                "summary": "Get a specific item",
                "description": "Retrieve a specific inventory item by ID",
                "operationId": "cf72b0674e86263c9f13097ae1198063",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "Item ID",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "Item retrieved successfully"
                                        },
                                        "data": {
                                            "$ref": "#/components/schemas/Item"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Item not found"
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            },
            "put": {
                "tags": [
                    "Items"
                ],
                "summary": "Update an item",
                "description": "Update an existing inventory item",
                "operationId": "5946ad0f76a90167421f69b2ba2a086a",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "Item ID",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "properties": {
                                    "category_id": {
                                        "type": "integer",
                                        "example": 1
                                    },
                                    "item_name": {
                                        "type": "string",
                                        "maxLength": 255,
                                        "example": "Updated Item Name"
                                    },
                                    "stock": {
                                        "type": "integer",
                                        "minimum": 0,
                                        "example": 30
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Item updated successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "Item updated successfully"
                                        },
                                        "data": {
                                            "$ref": "#/components/schemas/Item"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Item not found"
                    },
                    "422": {
                        "description": "Validation error"
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            },
            "delete": {
                "tags": [
                    "Items"
                ],
                "summary": "Delete an item",
                "description": "Delete an existing inventory item",
                "operationId": "264a2ea4d554347870bc1216f33f30a7",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "Item ID",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Item deleted successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "Item deleted successfully"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Item not found"
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            }
        },
        "/api/purchase-invoices": {
            "get": {
                "tags": [
                    "Purchase Invoices"
                ],
                "summary": "Get list of purchase invoices",
                "description": "Retrieve all purchase invoices with search, sort, and pagination",
                "operationId": "getPurchaseInvoicesList",
                "parameters": [
                    {
                        "name": "search",
                        "in": "query",
                        "description": "Search term for item purchased",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "sort_by",
                        "in": "query",
                        "description": "Field to sort by",
                        "required": false,
                        "schema": {
                            "type": "string",
                            "enum": [
                                "id",
                                "item_purchased",
                                "total_price",
                                "budget",
                                "quantity",
                                "created_at"
                            ]
                        }
                    },
                    {
                        "name": "sort_order",
                        "in": "query",
                        "description": "Sort order",
                        "required": false,
                        "schema": {
                            "type": "string",
                            "default": "asc",
                            "enum": [
                                "asc",
                                "desc"
                            ]
                        }
                    },
                    {
                        "name": "per_page",
                        "in": "query",
                        "description": "Number of items per page",
                        "required": false,
                        "schema": {
                            "type": "integer",
                            "default": 15,
                            "maximum": 100,
                            "minimum": 1
                        }
                    },
                    {
                        "name": "page",
                        "in": "query",
                        "description": "Page number",
                        "required": false,
                        "schema": {
                            "type": "integer",
                            "default": 1,
                            "minimum": 1
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Purchase invoices retrieved successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "Purchase invoices retrieved successfully"
                                        },
                                        "data": {
                                            "type": "array",
                                            "items": {
                                                "$ref": "#/components/schemas/PurchaseInvoice"
                                            }
                                        },
                                        "pagination": {
                                            "properties": {
                                                "current_page": {
                                                    "type": "integer"
                                                },
                                                "last_page": {
                                                    "type": "integer"
                                                },
                                                "per_page": {
                                                    "type": "integer"
                                                },
                                                "total": {
                                                    "type": "integer"
                                                },
                                                "from": {
                                                    "type": "integer"
                                                },
                                                "to": {
                                                    "type": "integer"
                                                }
                                            },
                                            "type": "object"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthenticated"
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            },
            "post": {
                "tags": [
                    "Purchase Invoices"
                ],
                "summary": "Create a new purchase invoice",
                "description": "Store a newly created purchase invoice",
                "operationId": "storePurchaseInvoice",
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/PurchaseInvoiceStoreRequest"
                            }
                        }
                    }
                },
                "responses": {
                    "201": {
                        "description": "Purchase invoice created successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "Purchase invoice created successfully"
                                        },
                                        "data": {
                                            "$ref": "#/components/schemas/PurchaseInvoice"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "422": {
                        "description": "Validation error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ValidationError"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthenticated"
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            }
        },
        "/api/purchase-invoices/{id}": {
            "get": {
                "tags": [
                    "Purchase Invoices"
                ],
                "summary": "Get purchase invoice information",
                "description": "Retrieve a specific purchase invoice by ID",
                "operationId": "getPurchaseInvoice",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "Purchase invoice ID",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Purchase invoice retrieved successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "Purchase invoice retrieved successfully"
                                        },
                                        "data": {
                                            "$ref": "#/components/schemas/PurchaseInvoice"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Purchase invoice not found"
                    },
                    "401": {
                        "description": "Unauthenticated"
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            },
            "put": {
                "tags": [
                    "Purchase Invoices"
                ],
                "summary": "Update purchase invoice",
                "description": "Update the specified purchase invoice",
                "operationId": "updatePurchaseInvoice",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "Purchase invoice ID",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/PurchaseInvoiceUpdateRequest"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Purchase invoice updated successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "Purchase invoice updated successfully"
                                        },
                                        "data": {
                                            "$ref": "#/components/schemas/PurchaseInvoice"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Purchase invoice not found"
                    },
                    "422": {
                        "description": "Validation error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ValidationError"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthenticated"
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            },
            "delete": {
                "tags": [
                    "Purchase Invoices"
                ],
                "summary": "Delete purchase invoice",
                "description": "Remove the specified purchase invoice",
                "operationId": "deletePurchaseInvoice",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "Purchase invoice ID",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "responses": {
                    "204": {
                        "description": "Purchase invoice deleted successfully"
                    },
                    "404": {
                        "description": "Purchase invoice not found"
                    },
                    "401": {
                        "description": "Unauthenticated"
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            }
        },
        "/api/purchase-requests": {
            "get": {
                "tags": [
                    "Purchase Requests"
                ],
                "summary": "Get list of purchase requests",
                "description": "Retrieve all purchase requests with search, sort, and pagination",
                "operationId": "getPurchaseRequestsList",
                "parameters": [
                    {
                        "name": "search",
                        "in": "query",
                        "description": "Search term for item requested or description",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "sort_by",
                        "in": "query",
                        "description": "Field to sort by",
                        "required": false,
                        "schema": {
                            "type": "string",
                            "enum": [
                                "id",
                                "item_requested",
                                "quantity",
                                "price_per_pcs",
                                "request_date",
                                "approved_budget",
                                "used_budget",
                                "created_at"
                            ]
                        }
                    },
                    {
                        "name": "sort_order",
                        "in": "query",
                        "description": "Sort order",
                        "required": false,
                        "schema": {
                            "type": "string",
                            "default": "asc",
                            "enum": [
                                "asc",
                                "desc"
                            ]
                        }
                    },
                    {
                        "name": "per_page",
                        "in": "query",
                        "description": "Number of items per page",
                        "required": false,
                        "schema": {
                            "type": "integer",
                            "default": 15,
                            "maximum": 100,
                            "minimum": 1
                        }
                    },
                    {
                        "name": "page",
                        "in": "query",
                        "description": "Page number",
                        "required": false,
                        "schema": {
                            "type": "integer",
                            "default": 1,
                            "minimum": 1
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Purchase requests retrieved successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "Purchase requests retrieved successfully"
                                        },
                                        "data": {
                                            "type": "array",
                                            "items": {
                                                "$ref": "#/components/schemas/PurchaseRequest"
                                            }
                                        },
                                        "pagination": {
                                            "properties": {
                                                "current_page": {
                                                    "type": "integer"
                                                },
                                                "last_page": {
                                                    "type": "integer"
                                                },
                                                "per_page": {
                                                    "type": "integer"
                                                },
                                                "total": {
                                                    "type": "integer"
                                                },
                                                "from": {
                                                    "type": "integer"
                                                },
                                                "to": {
                                                    "type": "integer"
                                                }
                                            },
                                            "type": "object"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthenticated"
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            },
            "post": {
                "tags": [
                    "Purchase Requests"
                ],
                "summary": "Create a new purchase request",
                "description": "Store a newly created purchase request",
                "operationId": "storePurchaseRequest",
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/PurchaseRequestStoreRequest"
                            }
                        }
                    }
                },
                "responses": {
                    "201": {
                        "description": "Purchase request created successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "Purchase request created successfully"
                                        },
                                        "data": {
                                            "$ref": "#/components/schemas/PurchaseRequest"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "422": {
                        "description": "Validation error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ValidationError"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthenticated"
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            }
        },
        "/api/purchase-requests/{id}": {
            "get": {
                "tags": [
                    "Purchase Requests"
                ],
                "summary": "Get purchase request information",
                "description": "Retrieve a specific purchase request by ID",
                "operationId": "getPurchaseRequest",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "Purchase request ID",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Purchase request retrieved successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "Purchase request retrieved successfully"
                                        },
                                        "data": {
                                            "$ref": "#/components/schemas/PurchaseRequest"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Purchase request not found"
                    },
                    "401": {
                        "description": "Unauthenticated"
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            },
            "put": {
                "tags": [
                    "Purchase Requests"
                ],
                "summary": "Update purchase request",
                "description": "Update the specified purchase request",
                "operationId": "updatePurchaseRequest",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "Purchase request ID",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/PurchaseRequestUpdateRequest"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Purchase request updated successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "Purchase request updated successfully"
                                        },
                                        "data": {
                                            "$ref": "#/components/schemas/PurchaseRequest"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Purchase request not found"
                    },
                    "422": {
                        "description": "Validation error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ValidationError"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthenticated"
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            },
            "delete": {
                "tags": [
                    "Purchase Requests"
                ],
                "summary": "Delete purchase request",
                "description": "Remove the specified purchase request",
                "operationId": "deletePurchaseRequest",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "Purchase request ID",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "responses": {
                    "204": {
                        "description": "Purchase request deleted successfully"
                    },
                    "404": {
                        "description": "Purchase request not found"
                    },
                    "401": {
                        "description": "Unauthenticated"
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            }
        },
        "/api/request-statuses": {
            "get": {
                "tags": [
                    "Request Statuses"
                ],
                "summary": "Get list of request statuses",
                "description": "Retrieve all request statuses",
                "operationId": "getRequestStatusesList",
                "responses": {
                    "200": {
                        "description": "Request statuses retrieved successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "Request statuses retrieved successfully"
                                        },
                                        "data": {
                                            "type": "array",
                                            "items": {
                                                "$ref": "#/components/schemas/RequestStatus"
                                            }
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthenticated"
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            },
            "post": {
                "tags": [
                    "Request Statuses"
                ],
                "summary": "Create a new request status",
                "description": "Store a newly created request status",
                "operationId": "storeRequestStatus",
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/RequestStatusStoreRequest"
                            }
                        }
                    }
                },
                "responses": {
                    "201": {
                        "description": "Request status created successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "Request status created successfully"
                                        },
                                        "data": {
                                            "$ref": "#/components/schemas/RequestStatus"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "422": {
                        "description": "Validation error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ValidationError"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthenticated"
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            }
        },
        "/api/request-statuses/{id}": {
            "get": {
                "tags": [
                    "Request Statuses"
                ],
                "summary": "Get request status information",
                "description": "Retrieve a specific request status by ID",
                "operationId": "getRequestStatus",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "Request status ID",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Request status retrieved successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "Request status retrieved successfully"
                                        },
                                        "data": {
                                            "$ref": "#/components/schemas/RequestStatus"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Request status not found"
                    },
                    "401": {
                        "description": "Unauthenticated"
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            },
            "put": {
                "tags": [
                    "Request Statuses"
                ],
                "summary": "Update request status",
                "description": "Update the specified request status",
                "operationId": "updateRequestStatus",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "Request status ID",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/RequestStatusUpdateRequest"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Request status updated successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "Request status updated successfully"
                                        },
                                        "data": {
                                            "$ref": "#/components/schemas/RequestStatus"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Request status not found"
                    },
                    "422": {
                        "description": "Validation error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ValidationError"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthenticated"
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            },
            "delete": {
                "tags": [
                    "Request Statuses"
                ],
                "summary": "Delete request status",
                "description": "Remove the specified request status",
                "operationId": "deleteRequestStatus",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "Request status ID",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "responses": {
                    "204": {
                        "description": "Request status deleted successfully"
                    },
                    "404": {
                        "description": "Request status not found"
                    },
                    "401": {
                        "description": "Unauthenticated"
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            }
        },
        "/api/roles": {
            "get": {
                "tags": [
                    "Roles"
                ],
                "summary": "Get all roles",
                "description": "Retrieve a list of all user roles",
                "operationId": "ca86f0a206144dfbd695b749b4b28f9d",
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "roles": {
                                            "type": "array",
                                            "items": {
                                                "$ref": "#/components/schemas/Role"
                                            }
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            },
            "post": {
                "tags": [
                    "Roles"
                ],
                "summary": "Create a new role",
                "description": "Create a new user role",
                "operationId": "341b8b162b61267c7bd187500aea5bc4",
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "required": [
                                    "role_name"
                                ],
                                "properties": {
                                    "role_name": {
                                        "type": "string",
                                        "maxLength": 255,
                                        "example": "Manager"
                                    },
                                    "description": {
                                        "type": "string",
                                        "example": "Department manager role"
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "201": {
                        "description": "Role created successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "role": {
                                            "$ref": "#/components/schemas/Role"
                                        },
                                        "message": {
                                            "type": "string",
                                            "example": "Role created successfully"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "422": {
                        "description": "Validation error"
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            }
        },
        "/api/roles/{id}": {
            "get": {
                "tags": [
                    "Roles"
                ],
                "summary": "Get a specific role",
                "description": "Retrieve a specific role by ID",
                "operationId": "15c404caf238f1861c81f68205d328e5",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "Role ID",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "role": {
                                            "$ref": "#/components/schemas/Role"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Role not found"
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            },
            "put": {
                "tags": [
                    "Roles"
                ],
                "summary": "Update a role",
                "description": "Update an existing role",
                "operationId": "c73ab816ae8fb7c34a995d37ba577082",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "Role ID",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "required": [
                                    "role_name"
                                ],
                                "properties": {
                                    "role_name": {
                                        "type": "string",
                                        "maxLength": 255,
                                        "example": "Senior Manager"
                                    },
                                    "description": {
                                        "type": "string",
                                        "example": "Senior manager role with additional privileges"
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Role updated successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "role": {
                                            "$ref": "#/components/schemas/Role"
                                        },
                                        "message": {
                                            "type": "string",
                                            "example": "Role updated successfully"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Role not found"
                    },
                    "422": {
                        "description": "Validation error"
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            },
            "delete": {
                "tags": [
                    "Roles"
                ],
                "summary": "Delete a role",
                "description": "Delete an existing role",
                "operationId": "ffa6ef115d86b00cc6c54a6210019f9c",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "Role ID",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Role deleted successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "Role deleted successfully"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "409": {
                        "description": "Cannot delete role with associated users",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "Cannot delete role with associated users"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Role not found"
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            }
        },
        "/api/register": {
            "post": {
                "tags": [
                    "Authentication"
                ],
                "summary": "Register a new user",
                "description": "Create a new user account and return authentication token",
                "operationId": "482fd8cbb98dc3225fa0e7ac40c1abe6",
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "required": [
                                    "name",
                                    "email",
                                    "password",
                                    "role_id"
                                ],
                                "properties": {
                                    "name": {
                                        "type": "string",
                                        "maxLength": 255,
                                        "example": "John Doe"
                                    },
                                    "email": {
                                        "type": "string",
                                        "format": "email",
                                        "example": "john@example.com"
                                    },
                                    "password": {
                                        "type": "string",
                                        "minLength": 6,
                                        "example": "password123"
                                    },
                                    "password_confirmation": {
                                        "type": "string",
                                        "minLength": 6,
                                        "example": "password123"
                                    },
                                    "role_id": {
                                        "type": "integer",
                                        "example": 3
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "201": {
                        "description": "User registered successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "User registered successfully"
                                        },
                                        "user": {
                                            "$ref": "#/components/schemas/User"
                                        },
                                        "token": {
                                            "type": "string",
                                            "example": "1|abc123def456..."
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "422": {
                        "description": "Validation error"
                    }
                }
            }
        },
        "/api/login": {
            "post": {
                "tags": [
                    "Authentication"
                ],
                "summary": "User login",
                "description": "Authenticate user and return access token",
                "operationId": "afd167661891a2c4c1b49a04643b9223",
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "required": [
                                    "email",
                                    "password"
                                ],
                                "properties": {
                                    "email": {
                                        "type": "string",
                                        "format": "email",
                                        "example": "john@example.com"
                                    },
                                    "password": {
                                        "type": "string",
                                        "example": "password123"
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Login successful",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "Login successful"
                                        },
                                        "user": {
                                            "$ref": "#/components/schemas/User"
                                        },
                                        "token": {
                                            "type": "string",
                                            "example": "1|abc123def456..."
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Invalid credentials",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "Invalid credentials"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "422": {
                        "description": "Validation error"
                    }
                }
            }
        },
        "/api/logout": {
            "post": {
                "tags": [
                    "Authentication"
                ],
                "summary": "User logout",
                "description": "Logout the authenticated user and revoke access token",
                "operationId": "9872a1ded930c0faa99c7f184b4cd654",
                "responses": {
                    "200": {
                        "description": "Logged out successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "Logged out successfully"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthenticated"
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            }
        }
    },
    "components": {
        "schemas": {
            "User": {
                "properties": {
                    "id": {
                        "type": "integer",
                        "example": 1
                    },
                    "name": {
                        "type": "string",
                        "example": "John Doe"
                    },
                    "email": {
                        "type": "string",
                        "format": "email",
                        "example": "john@example.com"
                    },
                    "role_id": {
                        "type": "integer",
                        "example": 3
                    },
                    "email_verified_at": {
                        "type": "string",
                        "format": "date-time",
                        "nullable": true
                    },
                    "created_at": {
                        "type": "string",
                        "format": "date-time"
                    },
                    "updated_at": {
                        "type": "string",
                        "format": "date-time"
                    }
                },
                "type": "object"
            },
            "Role": {
                "properties": {
                    "id": {
                        "type": "integer",
                        "example": 1
                    },
                    "role_name": {
                        "type": "string",
                        "example": "Admin"
                    },
                    "description": {
                        "type": "string",
                        "example": "System administrator"
                    },
                    "created_at": {
                        "type": "string",
                        "format": "date-time"
                    },
                    "updated_at": {
                        "type": "string",
                        "format": "date-time"
                    }
                },
                "type": "object"
            },
            "Category": {
                "properties": {
                    "id": {
                        "type": "integer",
                        "example": 1
                    },
                    "category_name": {
                        "type": "string",
                        "example": "Electronics"
                    },
                    "description": {
                        "type": "string",
                        "example": "Electronic devices and components"
                    },
                    "created_at": {
                        "type": "string",
                        "format": "date-time"
                    },
                    "updated_at": {
                        "type": "string",
                        "format": "date-time"
                    }
                },
                "type": "object"
            },
            "Item": {
                "properties": {
                    "id": {
                        "type": "integer",
                        "example": 1
                    },
                    "category_id": {
                        "type": "integer",
                        "example": 1
                    },
                    "item_name": {
                        "type": "string",
                        "example": "Laptop Dell Inspiron"
                    },
                    "stock": {
                        "type": "integer",
                        "example": 25
                    },
                    "created_at": {
                        "type": "string",
                        "format": "date-time"
                    },
                    "updated_at": {
                        "type": "string",
                        "format": "date-time"
                    }
                },
                "type": "object"
            },
            "BorrowStatus": {
                "properties": {
                    "id": {
                        "type": "integer",
                        "example": 1
                    },
                    "status_name": {
                        "type": "string",
                        "example": "Borrowed"
                    },
                    "badge_color": {
                        "type": "string",
                        "example": "#007BFF"
                    },
                    "created_at": {
                        "type": "string",
                        "format": "date-time"
                    },
                    "updated_at": {
                        "type": "string",
                        "format": "date-time"
                    }
                },
                "type": "object"
            },
            "RequestStatus": {
                "properties": {
                    "id": {
                        "type": "integer",
                        "example": 1
                    },
                    "status_name": {
                        "type": "string",
                        "example": "Approved"
                    },
                    "badge_color": {
                        "type": "string",
                        "example": "#28A745"
                    },
                    "created_at": {
                        "type": "string",
                        "format": "date-time"
                    },
                    "updated_at": {
                        "type": "string",
                        "format": "date-time"
                    }
                },
                "type": "object"
            },
            "PurchaseInvoice": {
                "properties": {
                    "id": {
                        "type": "integer",
                        "example": 1
                    },
                    "item_purchased": {
                        "type": "string",
                        "example": "Office Chair"
                    },
                    "total_price": {
                        "type": "number",
                        "format": "float",
                        "example": 299.99
                    },
                    "budget": {
                        "type": "number",
                        "format": "float",
                        "example": 350
                    },
                    "quantity": {
                        "type": "integer",
                        "example": 5
                    },
                    "img": {
                        "type": "string",
                        "example": "https://example.com/image.jpg",
                        "nullable": true
                    },
                    "created_at": {
                        "type": "string",
                        "format": "date-time"
                    },
                    "updated_at": {
                        "type": "string",
                        "format": "date-time"
                    }
                },
                "type": "object"
            },
            "PurchaseRequest": {
                "properties": {
                    "id": {
                        "type": "integer",
                        "example": 1
                    },
                    "request_status_id": {
                        "type": "integer",
                        "example": 1
                    },
                    "category_id": {
                        "type": "integer",
                        "example": 1
                    },
                    "invoice_id": {
                        "type": "integer",
                        "example": 1,
                        "nullable": true
                    },
                    "requested_by": {
                        "type": "string",
                        "example": "John Doe"
                    },
                    "approved_by": {
                        "type": "string",
                        "example": "Jane Smith",
                        "nullable": true
                    },
                    "item_requested": {
                        "type": "string",
                        "example": "Office Supplies"
                    },
                    "description": {
                        "type": "string",
                        "example": "Urgent office supplies needed",
                        "nullable": true
                    },
                    "quantity": {
                        "type": "integer",
                        "example": 10
                    },
                    "price_per_pcs": {
                        "type": "number",
                        "format": "float",
                        "example": 25.5
                    },
                    "request_date": {
                        "type": "string",
                        "format": "date",
                        "example": "2024-01-15"
                    },
                    "approved_budget": {
                        "type": "number",
                        "format": "float",
                        "example": 500,
                        "nullable": true
                    },
                    "used_budget": {
                        "type": "number",
                        "format": "float",
                        "example": 255,
                        "nullable": true
                    },
                    "created_at": {
                        "type": "string",
                        "format": "date-time"
                    },
                    "updated_at": {
                        "type": "string",
                        "format": "date-time"
                    }
                },
                "type": "object"
            },
            "ItemBorrowed": {
                "properties": {
                    "id": {
                        "type": "integer",
                        "example": 1
                    },
                    "user_id": {
                        "type": "integer",
                        "example": 1
                    },
                    "item_id": {
                        "type": "integer",
                        "example": 1
                    },
                    "borrow_status_id": {
                        "type": "integer",
                        "example": 1
                    },
                    "quantity": {
                        "type": "integer",
                        "example": 2
                    },
                    "borrow_date": {
                        "type": "string",
                        "format": "date",
                        "example": "2024-01-15"
                    },
                    "return_date": {
                        "type": "string",
                        "format": "date",
                        "example": "2024-01-25",
                        "nullable": true
                    },
                    "due_date": {
                        "type": "string",
                        "format": "date",
                        "example": "2024-01-22"
                    },
                    "fine": {
                        "type": "number",
                        "format": "float",
                        "example": 15
                    },
                    "created_at": {
                        "type": "string",
                        "format": "date-time"
                    },
                    "updated_at": {
                        "type": "string",
                        "format": "date-time"
                    }
                },
                "type": "object"
            },
            "ValidationError": {
                "properties": {
                    "message": {
                        "type": "string",
                        "example": "The given data was invalid."
                    },
                    "errors": {
                        "type": "object",
                        "example": {
                            "name": [
                                "The name field is required."
                            ],
                            "email": [
                                "The email field must be a valid email address."
                            ]
                        },
                        "additionalProperties": {
                            "type": "array",
                            "items": {
                                "type": "string"
                            }
                        }
                    }
                },
                "type": "object"
            },
            "PurchaseInvoiceStoreRequest": {
                "required": [
                    "item_purchased",
                    "total_price",
                    "budget",
                    "quantity"
                ],
                "properties": {
                    "item_purchased": {
                        "type": "string",
                        "maxLength": 255,
                        "example": "Office Laptop"
                    },
                    "total_price": {
                        "type": "number",
                        "format": "float",
                        "minimum": 0,
                        "example": 1200
                    },
                    "budget": {
                        "type": "number",
                        "format": "float",
                        "minimum": 0,
                        "example": 1500
                    },
                    "quantity": {
                        "type": "integer",
                        "minimum": 1,
                        "example": 3
                    },
                    "img": {
                        "type": "string",
                        "example": "laptop-image.jpg",
                        "nullable": true
                    }
                },
                "type": "object"
            },
            "PurchaseInvoiceUpdateRequest": {
                "properties": {
                    "item_purchased": {
                        "type": "string",
                        "maxLength": 255,
                        "example": "Office Laptop"
                    },
                    "total_price": {
                        "type": "number",
                        "format": "float",
                        "minimum": 0,
                        "example": 1200
                    },
                    "budget": {
                        "type": "number",
                        "format": "float",
                        "minimum": 0,
                        "example": 1500
                    },
                    "quantity": {
                        "type": "integer",
                        "minimum": 1,
                        "example": 3
                    },
                    "img": {
                        "type": "string",
                        "example": "laptop-image.jpg",
                        "nullable": true
                    }
                },
                "type": "object"
            },
            "RequestStatusStoreRequest": {
                "required": [
                    "status_name",
                    "badge_color"
                ],
                "properties": {
                    "status_name": {
                        "type": "string",
                        "maxLength": 255,
                        "example": "Approved"
                    },
                    "badge_color": {
                        "type": "string",
                        "maxLength": 255,
                        "example": "green"
                    }
                },
                "type": "object"
            },
            "RequestStatusUpdateRequest": {
                "properties": {
                    "status_name": {
                        "type": "string",
                        "maxLength": 255,
                        "example": "Approved"
                    },
                    "badge_color": {
                        "type": "string",
                        "maxLength": 255,
                        "example": "green"
                    }
                },
                "type": "object"
            },
            "PurchaseRequestStoreRequest": {
                "required": [
                    "item_requested",
                    "quantity",
                    "price_per_pcs",
                    "request_date"
                ],
                "properties": {
                    "item_requested": {
                        "type": "string",
                        "maxLength": 255,
                        "example": "Office Supplies"
                    },
                    "description": {
                        "type": "string",
                        "example": "Urgent office supplies needed",
                        "nullable": true
                    },
                    "quantity": {
                        "type": "integer",
                        "minimum": 1,
                        "example": 10
                    },
                    "price_per_pcs": {
                        "type": "number",
                        "format": "float",
                        "minimum": 0,
                        "example": 25.5
                    },
                    "request_date": {
                        "type": "string",
                        "format": "date",
                        "example": "2024-01-15"
                    },
                    "approved_budget": {
                        "type": "number",
                        "format": "float",
                        "minimum": 0,
                        "example": 500,
                        "nullable": true
                    },
                    "used_budget": {
                        "type": "number",
                        "format": "float",
                        "minimum": 0,
                        "example": 255,
                        "nullable": true
                    }
                },
                "type": "object"
            },
            "PurchaseRequestUpdateRequest": {
                "properties": {
                    "item_requested": {
                        "type": "string",
                        "maxLength": 255,
                        "example": "Office Supplies"
                    },
                    "description": {
                        "type": "string",
                        "example": "Urgent office supplies needed",
                        "nullable": true
                    },
                    "quantity": {
                        "type": "integer",
                        "minimum": 1,
                        "example": 10
                    },
                    "price_per_pcs": {
                        "type": "number",
                        "format": "float",
                        "minimum": 0,
                        "example": 25.5
                    },
                    "request_date": {
                        "type": "string",
                        "format": "date",
                        "example": "2024-01-15"
                    },
                    "approved_budget": {
                        "type": "number",
                        "format": "float",
                        "minimum": 0,
                        "example": 500,
                        "nullable": true
                    },
                    "used_budget": {
                        "type": "number",
                        "format": "float",
                        "minimum": 0,
                        "example": 255,
                        "nullable": true
                    }
                },
                "type": "object"
            }
        },
        "securitySchemes": {
            "bearerAuth": {
                "type": "http",
                "description": "Enter token in format: Bearer {token}",
                "bearerFormat": "Token",
                "scheme": "bearer"
            }
        }
    },
    "tags": [
        {
            "name": "Borrow Statuses",
            "description": "Operations related to borrow status management"
        },
        {
            "name": "Categories",
            "description": "Operations related to category management"
        },
        {
            "name": "Item Borrowed",
            "description": "Operations related to borrowed items tracking"
        },
        {
            "name": "Items",
            "description": "Operations related to inventory item management"
        },
        {
            "name": "Purchase Invoices",
            "description": "Purchase invoices management"
        },
        {
            "name": "Purchase Requests",
            "description": "Purchase requests management"
        },
        {
            "name": "Request Statuses",
            "description": "Request statuses management"
        },
        {
            "name": "Roles",
            "description": "Operations related to user role management"
        },
        {
            "name": "Authentication",
            "description": "User authentication operations"
        }
    ]
}